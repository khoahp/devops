/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.devops.simpleform.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.devops.simpleform.model.SimpleFrom;
import com.fds.devops.simpleform.model.SimpleFromModel;
import com.fds.devops.simpleform.model.SimpleFromSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SimpleFrom service. Represents a row in the &quot;do_simpleform&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SimpleFromModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SimpleFromImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SimpleFromImpl
 * @see SimpleFrom
 * @see SimpleFromModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SimpleFromModelImpl extends BaseModelImpl<SimpleFrom>
	implements SimpleFromModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a simple from model instance should use the {@link SimpleFrom} interface instead.
	 */
	public static final String TABLE_NAME = "do_simpleform";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "formId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "fullName", Types.VARCHAR },
			{ "birthday", Types.TIMESTAMP },
			{ "gender", Types.INTEGER },
			{ "email", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "shortDesciption", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("fullName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("birthday", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("gender", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shortDesciption", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table do_simpleform (uuid_ VARCHAR(75) null,formId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,fullName VARCHAR(75) null,birthday DATE null,gender INTEGER,email VARCHAR(75) null,address VARCHAR(75) null,shortDesciption VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table do_simpleform";
	public static final String ORDER_BY_JPQL = " ORDER BY simpleFrom.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY do_simpleform.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.devops.simpleform.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.devops.simpleform.model.SimpleFrom"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.devops.simpleform.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.devops.simpleform.model.SimpleFrom"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.devops.simpleform.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.devops.simpleform.model.SimpleFrom"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GENDER_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long CREATEDATE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SimpleFrom toModel(SimpleFromSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SimpleFrom model = new SimpleFromImpl();

		model.setUuid(soapModel.getUuid());
		model.setFormId(soapModel.getFormId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setFullName(soapModel.getFullName());
		model.setBirthday(soapModel.getBirthday());
		model.setGender(soapModel.getGender());
		model.setEmail(soapModel.getEmail());
		model.setAddress(soapModel.getAddress());
		model.setShortDesciption(soapModel.getShortDesciption());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SimpleFrom> toModels(SimpleFromSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SimpleFrom> models = new ArrayList<SimpleFrom>(soapModels.length);

		for (SimpleFromSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.devops.simpleform.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.devops.simpleform.model.SimpleFrom"));

	public SimpleFromModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _formId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFormId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _formId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SimpleFrom.class;
	}

	@Override
	public String getModelClassName() {
		return SimpleFrom.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("formId", getFormId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("fullName", getFullName());
		attributes.put("birthday", getBirthday());
		attributes.put("gender", getGender());
		attributes.put("email", getEmail());
		attributes.put("address", getAddress());
		attributes.put("shortDesciption", getShortDesciption());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long formId = (Long)attributes.get("formId");

		if (formId != null) {
			setFormId(formId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		Date birthday = (Date)attributes.get("birthday");

		if (birthday != null) {
			setBirthday(birthday);
		}

		Integer gender = (Integer)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String shortDesciption = (String)attributes.get("shortDesciption");

		if (shortDesciption != null) {
			setShortDesciption(shortDesciption);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getFormId() {
		return _formId;
	}

	@Override
	public void setFormId(long formId) {
		_formId = formId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	@Override
	public Date getBirthday() {
		return _birthday;
	}

	@Override
	public void setBirthday(Date birthday) {
		_birthday = birthday;
	}

	@JSON
	@Override
	public int getGender() {
		return _gender;
	}

	@Override
	public void setGender(int gender) {
		_columnBitmask |= GENDER_COLUMN_BITMASK;

		if (!_setOriginalGender) {
			_setOriginalGender = true;

			_originalGender = _gender;
		}

		_gender = gender;
	}

	public int getOriginalGender() {
		return _originalGender;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	@Override
	public String getShortDesciption() {
		if (_shortDesciption == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortDesciption;
		}
	}

	@Override
	public void setShortDesciption(String shortDesciption) {
		_shortDesciption = shortDesciption;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SimpleFrom.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SimpleFrom.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SimpleFrom toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SimpleFrom)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SimpleFromImpl simpleFromImpl = new SimpleFromImpl();

		simpleFromImpl.setUuid(getUuid());
		simpleFromImpl.setFormId(getFormId());
		simpleFromImpl.setGroupId(getGroupId());
		simpleFromImpl.setCompanyId(getCompanyId());
		simpleFromImpl.setUserId(getUserId());
		simpleFromImpl.setUserName(getUserName());
		simpleFromImpl.setCreateDate(getCreateDate());
		simpleFromImpl.setModifiedDate(getModifiedDate());
		simpleFromImpl.setFullName(getFullName());
		simpleFromImpl.setBirthday(getBirthday());
		simpleFromImpl.setGender(getGender());
		simpleFromImpl.setEmail(getEmail());
		simpleFromImpl.setAddress(getAddress());
		simpleFromImpl.setShortDesciption(getShortDesciption());

		simpleFromImpl.resetOriginalValues();

		return simpleFromImpl;
	}

	@Override
	public int compareTo(SimpleFrom simpleFrom) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), simpleFrom.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SimpleFrom)) {
			return false;
		}

		SimpleFrom simpleFrom = (SimpleFrom)obj;

		long primaryKey = simpleFrom.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SimpleFromModelImpl simpleFromModelImpl = this;

		simpleFromModelImpl._originalUuid = simpleFromModelImpl._uuid;

		simpleFromModelImpl._originalGroupId = simpleFromModelImpl._groupId;

		simpleFromModelImpl._setOriginalGroupId = false;

		simpleFromModelImpl._originalCompanyId = simpleFromModelImpl._companyId;

		simpleFromModelImpl._setOriginalCompanyId = false;

		simpleFromModelImpl._setModifiedDate = false;

		simpleFromModelImpl._originalGender = simpleFromModelImpl._gender;

		simpleFromModelImpl._setOriginalGender = false;

		simpleFromModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SimpleFrom> toCacheModel() {
		SimpleFromCacheModel simpleFromCacheModel = new SimpleFromCacheModel();

		simpleFromCacheModel.uuid = getUuid();

		String uuid = simpleFromCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			simpleFromCacheModel.uuid = null;
		}

		simpleFromCacheModel.formId = getFormId();

		simpleFromCacheModel.groupId = getGroupId();

		simpleFromCacheModel.companyId = getCompanyId();

		simpleFromCacheModel.userId = getUserId();

		simpleFromCacheModel.userName = getUserName();

		String userName = simpleFromCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			simpleFromCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			simpleFromCacheModel.createDate = createDate.getTime();
		}
		else {
			simpleFromCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			simpleFromCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			simpleFromCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		simpleFromCacheModel.fullName = getFullName();

		String fullName = simpleFromCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			simpleFromCacheModel.fullName = null;
		}

		Date birthday = getBirthday();

		if (birthday != null) {
			simpleFromCacheModel.birthday = birthday.getTime();
		}
		else {
			simpleFromCacheModel.birthday = Long.MIN_VALUE;
		}

		simpleFromCacheModel.gender = getGender();

		simpleFromCacheModel.email = getEmail();

		String email = simpleFromCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			simpleFromCacheModel.email = null;
		}

		simpleFromCacheModel.address = getAddress();

		String address = simpleFromCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			simpleFromCacheModel.address = null;
		}

		simpleFromCacheModel.shortDesciption = getShortDesciption();

		String shortDesciption = simpleFromCacheModel.shortDesciption;

		if ((shortDesciption != null) && (shortDesciption.length() == 0)) {
			simpleFromCacheModel.shortDesciption = null;
		}

		return simpleFromCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", formId=");
		sb.append(getFormId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", birthday=");
		sb.append(getBirthday());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", shortDesciption=");
		sb.append(getShortDesciption());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.fds.devops.simpleform.model.SimpleFrom");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formId</column-name><column-value><![CDATA[");
		sb.append(getFormId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthday</column-name><column-value><![CDATA[");
		sb.append(getBirthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortDesciption</column-name><column-value><![CDATA[");
		sb.append(getShortDesciption());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SimpleFrom.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SimpleFrom.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _formId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _fullName;
	private Date _birthday;
	private int _gender;
	private int _originalGender;
	private boolean _setOriginalGender;
	private String _email;
	private String _address;
	private String _shortDesciption;
	private long _columnBitmask;
	private SimpleFrom _escapedModel;
}